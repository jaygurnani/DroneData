plot(y=data.toPlot$Velocity, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=9.33699989318848, y=data.toPlot$Power[102], pch=1)
points(x=12.3469998836517, y=data.toPlot$Power[132], pch=2)
points(x=15.3599998950958, y=data.toPlot$Power[162], pch=3)
points(x=18.3669998645782, y=data.toPlot$Power[192], pch=4)
points(x=21.3810000419617, y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="3.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("ThirdExperimentSingleAngle", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=9.33699989318848, y=data.toPlot$Power[102], pch=1)
points(x=12.3469998836517, y=data.toPlot$Power[132], pch=2)
points(x=15.3599998950958, y=data.toPlot$Power[162], pch=3)
points(x=18.3669998645782, y=data.toPlot$Power[192], pch=4)
points(x=21.3810000419617, y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="3.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("ThirdExperimentSingleAngle", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[102], y=data.toPlot$Power[102], pch=1)
points(x=12.3469998836517, y=data.toPlot$Power[132], pch=2)
points(x=15.3599998950958, y=data.toPlot$Power[162], pch=3)
points(x=18.3669998645782, y=data.toPlot$Power[192], pch=4)
points(x=21.3810000419617, y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="3.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("ThirdExperimentSingleAngle", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[102], y=data.toPlot$Power[102], pch=1)
points(x=data.toPlot$TimeDiffValue[132], y=data.toPlot$Power[132], pch=2)
points(x=data.toPlot$TimeDiffValue[162], y=data.toPlot$Power[162], pch=3)
points(x=data.toPlot$TimeDiffValue[192], y=data.toPlot$Power[192], pch=4)
points(x=data.toPlot$TimeDiffValue[22], y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="3.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("ThirdExperimentSingleAngle", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[102], y=data.toPlot$Power[102], pch=1)
points(x=data.toPlot$TimeDiffValue[132], y=data.toPlot$Power[132], pch=2)
points(x=data.toPlot$TimeDiffValue[162], y=data.toPlot$Power[162], pch=3)
points(x=data.toPlot$TimeDiffValue[192], y=data.toPlot$Power[192], pch=4)
points(x=data.toPlot$TimeDiffValue[222], y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="3.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("ThirdExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[102], y=data.toPlot$Power[102], pch=1)
points(x=data.toPlot$TimeDiffValue[132], y=data.toPlot$Power[132], pch=2)
points(x=data.toPlot$TimeDiffValue[162], y=data.toPlot$Power[162], pch=3)
points(x=data.toPlot$TimeDiffValue[192], y=data.toPlot$Power[192], pch=4)
points(x=data.toPlot$TimeDiffValue[222], y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="4.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("FourthExperimentSingleAngle", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Velocity, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=5.92000007629395, y=9.0049986, pch=1)
points(x=9.12800002098083, y=9.5707885, pch=2)
points(x=12.1410000324249, y=9.6798764, pch=3)
points(x=15.1490001678467, y=9.7293371, pch=4)
points(x=18.1579999923706, y=9.9729636, pch=5)
legend("topleft", legend=c("16 Degrees", "17 Degrees", "18 Degrees", "19 Degrees", "20 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
View(data.toPlot)
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="4.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("FourthExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Velocity, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[68], y=data.toPlot$Power[68], pch=1)
points(x=data.toPlot$TimeDiffValue[98], y=data.toPlot$Power[98], pch=2)
points(x=data.toPlot$TimeDiffValue[128], y=data.toPlot$Power[128], pch=3)
points(x=data.toPlot$TimeDiffValue[158], y=data.toPlot$Power[158], pch=4)
points(x=data.toPlot$TimeDiffValue[188], y=data.toPlot$Power[188], pch=5)
legend("topleft", legend=c("16 Degrees", "17 Degrees", "18 Degrees", "19 Degrees", "20 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="4.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("FourthExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Speed (m/s)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[68], y=data.toPlot$Power[68], pch=1)
points(x=data.toPlot$TimeDiffValue[98], y=data.toPlot$Power[98], pch=2)
points(x=data.toPlot$TimeDiffValue[128], y=data.toPlot$Power[128], pch=3)
points(x=data.toPlot$TimeDiffValue[158], y=data.toPlot$Power[158], pch=4)
points(x=data.toPlot$TimeDiffValue[188], y=data.toPlot$Power[188], pch=5)
legend("topleft", legend=c("16 Degrees", "17 Degrees", "18 Degrees", "19 Degrees", "20 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="4.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("FourthExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[68], y=data.toPlot$Power[68], pch=1)
points(x=data.toPlot$TimeDiffValue[98], y=data.toPlot$Power[98], pch=2)
points(x=data.toPlot$TimeDiffValue[128], y=data.toPlot$Power[128], pch=3)
points(x=data.toPlot$TimeDiffValue[158], y=data.toPlot$Power[158], pch=4)
points(x=data.toPlot$TimeDiffValue[188], y=data.toPlot$Power[188], pch=5)
legend("topleft", legend=c("16 Degrees", "17 Degrees", "18 Degrees", "19 Degrees", "20 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
library(geosphere)
# Read the data
data <- read.csv(file="1.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("FirstExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds", main="Drone Recorded Speed")
points(x=7.00800013542175, y=data.toPlot$Power[70], pch=1)
points(x=10.0150001049042, y=data.toPlot$Power[101], pch=2)
points(x=13.0260000228882, y=data.toPlot$Power[131], pch=3)
points(x=16.0360000133514, y=data.toPlot$Power[161], pch=4)
points(x=19.058000087738, y=data.toPlot$Power[191], pch=5)
legend("topleft", legend=c("1 Degrees", "2 Degrees", "3 Degrees", "4 Degrees", "5 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="2.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("SecondExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds", main="Drone Recorded Speed")
points(x=6.20799994468689, y=data.toPlot$Power[64], pch=1)
points(x=9.21700000762939, y=data.toPlot$Power[94], pch=2)
points(x=12.2249999046326, y=data.toPlot$Power[124], pch=3)
points(x=15.2359998226166, y=data.toPlot$Power[154], pch=4)
points(x=18.3359999656677, y=data.toPlot$Power[184], pch=5)
legend("topleft", legend=c("6 Degrees", "7 Degrees", "8 Degrees", "9 Degrees", "10 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="3.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("ThirdExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds")
points(x=data.toPlot$TimeDiffValue[102], y=data.toPlot$Power[102], pch=1)
points(x=data.toPlot$TimeDiffValue[132], y=data.toPlot$Power[132], pch=2)
points(x=data.toPlot$TimeDiffValue[162], y=data.toPlot$Power[162], pch=3)
points(x=data.toPlot$TimeDiffValue[192], y=data.toPlot$Power[192], pch=4)
points(x=data.toPlot$TimeDiffValue[222], y=data.toPlot$Power[222], pch=5)
legend("topleft", legend=c("11 Degrees", "12 Degrees", "13 Degrees", "14 Degrees", "15 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
library(geosphere)
# Read the data
data <- read.csv(file="1.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("FirstExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds")
points(x=7.00800013542175, y=data.toPlot$Power[70], pch=1)
points(x=10.0150001049042, y=data.toPlot$Power[101], pch=2)
points(x=13.0260000228882, y=data.toPlot$Power[131], pch=3)
points(x=16.0360000133514, y=data.toPlot$Power[161], pch=4)
points(x=19.058000087738, y=data.toPlot$Power[191], pch=5)
legend("topleft", legend=c("1 Degrees", "2 Degrees", "3 Degrees", "4 Degrees", "5 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="2.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
ppi <- 200
png(file=paste("SecondExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds")
points(x=6.20799994468689, y=data.toPlot$Power[64], pch=1)
points(x=9.21700000762939, y=data.toPlot$Power[94], pch=2)
points(x=12.2249999046326, y=data.toPlot$Power[124], pch=3)
points(x=15.2359998226166, y=data.toPlot$Power[154], pch=4)
points(x=18.3359999656677, y=data.toPlot$Power[184], pch=5)
legend("topleft", legend=c("6 Degrees", "7 Degrees", "8 Degrees", "9 Degrees", "10 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
dev.off()
View(data.toPlot)
View(data.toPlot)
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
library(geosphere)
# Read the data
data <- read.csv(file="1.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("FirstExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds")
points(x=7.00800013542175, y=data.toPlot$Power[70], pch=1)
points(x=10.0150001049042, y=data.toPlot$Power[101], pch=2)
points(x=13.0260000228882, y=data.toPlot$Power[131], pch=3)
points(x=16.0360000133514, y=data.toPlot$Power[161], pch=4)
points(x=19.058000087738, y=data.toPlot$Power[191], pch=5)
legend("topleft", legend=c("1 Degrees", "2 Degrees", "3 Degrees", "4 Degrees", "5 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
View(data.toPlot)
# Set the working directory
setwd("/Users/mac/Desktop/Programming/COMP9596//DroneData")
require(splines) #thx @Chase for the notice
# Read the data
data <- read.csv(file="2.csv", header=TRUE, sep=",")
# Convert date column to Date object
data$Date <- as.POSIXct(data$Date)
# Extract the data from column name to plot
data.toPlot <- data[data$Battery > 5,]
# Calculate the difference of each time point to the first (in seconds)
data.toPlot$TimeDiff <- data.toPlot$Date - data.toPlot$Date[1]
# Since TimeDiff is a time/date object, convert it to a numeric and store this as an extra column in data frame
data.toPlot$TimeDiffValue <- as.numeric(data.toPlot$TimeDiff)
# Multiple current and voltage to get Power
data.toPlot$Power <- as.double(-(data.toPlot$Current/1000) * data.toPlot$Voltage/1000)
#Get Mangnitude of Velocity
data.toPlot$Velocity <- sqrt(data.toPlot$VelocityX^2 + data.toPlot$VelocityY^2 + data.toPlot$VelocityZ^2)
data.toPlot$Mean <- mean(data.toPlot$Power)
#dY <- diff(data.toPlot$Velocity)/diff(data.toPlot$TimeDiffValue)  # the derivative of your function
#dX <- rowMeans(embed(data.toPlot$TimeDiffValue,2)) # centers the X values for plotting
#ppi <- 200
#png(file=paste("SecondExperimentSingleAnglePower", ".png", sep=""), height=7*ppi, width=9*ppi, res=ppi)
#write.csv(data.toPlotFinal, file="FirstRev.csv")
plot(y=data.toPlot$Power, x=data.toPlot$TimeDiffValue,type="l",col="black", lwd="1", ylab="Power (in Watts)", xlab="Time in Seconds")
points(x=6.20799994468689, y=data.toPlot$Power[64], pch=1)
points(x=9.21700000762939, y=data.toPlot$Power[94], pch=2)
points(x=12.2249999046326, y=data.toPlot$Power[124], pch=3)
points(x=15.2359998226166, y=data.toPlot$Power[154], pch=4)
points(x=18.3359999656677, y=data.toPlot$Power[184], pch=5)
legend("topleft", legend=c("6 Degrees", "7 Degrees", "8 Degrees", "9 Degrees", "10 Degrees"), bty="n", pch=1:5, lty=1, lwd=1)
#dev.off()
View(data.toPlot)
